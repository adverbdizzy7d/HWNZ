name: Crawler & Push

on:
  workflow_dispatch: {}
  schedule:
    # every 4 hours
    - cron: '0 */4 * * *'

permissions:
  contents: write
  pull-requests: write

jobs:
  run-crawler:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Run Crawler.ps1 (Repo-Root)
        shell: pwsh
        run: |
          git config --global core.longpaths true
          & "$env:GITHUB_WORKSPACE\Crawler.ps1"
          if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

      - name: Commit & push CSVs to main (skip in PRs)
        if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
        shell: pwsh
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"

          # Stage all changes first, then unstage raw/
          git add -A
          git reset HEAD -- raw/
          

          # Only commit if there are changes (e.g. CSVs)
          git diff --cached --quiet
          if ($LASTEXITCODE -eq 0) {
            Write-Host "No CSV changes - nothing to commit for main."
          } else {
            $msg = "CSV Update via GitHub Actions ${{ github.run_id }} [skip ci]"
            git commit -m "$msg"
            git push origin HEAD:${{ github.ref_name }}
          }

      - name: Create & push RAW branch (JSONs per run)
        id: create_raw_branch
        shell: pwsh
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"

          $workspace = (Get-Location)
          $rawRunRoot  = Join-Path $workspace 'raw'
          if (-not (Test-Path $rawRunRoot)) {
            Write-Error "RAW run folder '$rawRunRoot' does not exist."
            exit 1
          }

          $ts = (Get-Date).ToUniversalTime().ToString("yyyyMMdd-HHmmssZ")
          $rawBranch = "raw/${{ github.run_id }}-$ts"

          Write-Host "Creating branch '$rawBranch' for RAW JSONs..."
          # Branch off from the current HEAD
          git switch -c $rawBranch

          # Only stage the current RAW run folder
          git add 'raw'

          # Only push branch if there is actually new RAW data
          git diff --cached --quiet
          if ($LASTEXITCODE -eq 0) {
            Write-Host "No RAW JSONs to commit - branch will not be created."
            # optionally switch back to main
            git switch ${{ github.ref_name }}
            exit 0
          }

          $msg = "RAW JSONs via GitHub Actions ${{ github.run_id }}"
          git commit -m "$msg"
          git push origin HEAD:$rawBranch

          # Optional: Switch back to main
          git switch ${{ github.ref_name }}

          "branch_created=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "branch_name=$rawBranch" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Create Pull Request for RAW data
        id: create_pr
        if: success() && steps.create_raw_branch.outputs.branch_created == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RAW_BRANCH: ${{ steps.create_raw_branch.outputs.branch_name }}
        shell: pwsh
        run: |
          $pr_title = "RAW Data Update from Run ${{ github.run_id }}"
          $pr_body = "This PR contains the raw JSON data from workflow run ${{ github.run_id }}."
          $pr_url = gh pr create --base raw-data --head $env:RAW_BRANCH --title $pr_title --body $pr_body
          echo "pr_url=$pr_url" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Enable Auto-Merge for RAW data PR
        if: success() && steps.create_pr.outputs.pr_url
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ steps.create_pr.outputs.pr_url }}
        shell: pwsh
        run: |
          gh pr merge $env:PR_URL --admin --merge --delete-branch
